Index: laborBackend-labor/src/main/java/com/yuantu/labor/controller/EmployeeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.yuantu.labor.controller;\r\n\r\nimport java.util.List;\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport org.springframework.security.access.prepost.PreAuthorize;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.PutMapping;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport com.yuantu.common.annotation.Log;\r\nimport com.yuantu.common.core.controller.BaseController;\r\nimport com.yuantu.common.core.domain.AjaxResult;\r\nimport com.yuantu.common.enums.BusinessType;\r\nimport com.yuantu.labor.domain.Employee;\r\nimport com.yuantu.labor.service.IEmployeeService;\r\nimport com.yuantu.common.utils.poi.ExcelUtil;\r\nimport com.yuantu.common.core.page.TableDataInfo;\r\n\r\n/**\r\n * 员工Controller\r\n * \r\n * @author ruoyi\r\n * @date 2023-09-06\r\n */\r\n@RestController\r\n@RequestMapping(\"/labor/employee\")\r\npublic class EmployeeController extends BaseController\r\n{\r\n    @Autowired\r\n    private IEmployeeService employeeService;\r\n\r\n    /**\r\n     * 查询员工列表\r\n     */\r\n    @PreAuthorize(\"@ss.hasPermi('labor:employee:list')\")\r\n    @GetMapping(\"/list\")\r\n    public TableDataInfo list(Employee employee)\r\n    {\r\n        startPage();\r\n        List<Employee> list = employeeService.selectEmployeeList(employee);\r\n        return getDataTable(list);\r\n    }\r\n\r\n    /**\r\n     * 导出员工列表\r\n     */\r\n    @PreAuthorize(\"@ss.hasPermi('labor:employee:export')\")\r\n    @Log(title = \"员工\", businessType = BusinessType.EXPORT)\r\n    @PostMapping(\"/export\")\r\n    public void export(HttpServletResponse response, Employee employee)\r\n    {\r\n        List<Employee> list = employeeService.selectEmployeeList(employee);\r\n        ExcelUtil<Employee> util = new ExcelUtil<Employee>(Employee.class);\r\n        util.exportExcel(response, list, \"员工数据\");\r\n    }\r\n\r\n    /**\r\n     * 获取员工详细信息\r\n     */\r\n    @PreAuthorize(\"@ss.hasPermi('labor:employee:query')\")\r\n    @GetMapping(value = \"/{empId}\")\r\n    public AjaxResult getInfo(@PathVariable(\"empId\") Long empId)\r\n    {\r\n        return success(employeeService.selectEmployeeByEmpId(empId));\r\n    }\r\n\r\n    /**\r\n     * 新增员工\r\n     */\r\n    @PreAuthorize(\"@ss.hasPermi('labor:employee:add')\")\r\n    @Log(title = \"员工\", businessType = BusinessType.INSERT)\r\n    @PostMapping\r\n    public AjaxResult add(@RequestBody Employee employee)\r\n    {\r\n        return toAjax(employeeService.insertEmployee(employee));\r\n    }\r\n\r\n    /**\r\n     * 修改员工\r\n     */\r\n    @PreAuthorize(\"@ss.hasPermi('labor:employee:edit')\")\r\n    @Log(title = \"员工\", businessType = BusinessType.UPDATE)\r\n    @PutMapping\r\n    public AjaxResult edit(@RequestBody Employee employee)\r\n    {\r\n        return toAjax(employeeService.updateEmployee(employee));\r\n    }\r\n\r\n    /**\r\n     * 删除员工\r\n     */\r\n    @PreAuthorize(\"@ss.hasPermi('labor:employee:remove')\")\r\n    @Log(title = \"员工\", businessType = BusinessType.DELETE)\r\n\t@DeleteMapping(\"/{empIds}\")\r\n    public AjaxResult remove(@PathVariable Long[] empIds)\r\n    {\r\n        return toAjax(employeeService.deleteEmployeeByEmpIds(empIds));\r\n    }\r\n}\r\n
===================================================================
diff --git a/laborBackend-labor/src/main/java/com/yuantu/labor/controller/EmployeeController.java b/laborBackend-labor/src/main/java/com/yuantu/labor/controller/EmployeeController.java
--- a/laborBackend-labor/src/main/java/com/yuantu/labor/controller/EmployeeController.java	
+++ b/laborBackend-labor/src/main/java/com/yuantu/labor/controller/EmployeeController.java	
@@ -1,7 +1,11 @@
 package com.yuantu.labor.controller;
 
-import java.util.List;
+import java.util.*;
 import javax.servlet.http.HttpServletResponse;
+
+import com.alibaba.fastjson2.JSON;
+import com.yuantu.labor.vo.EmployeeInfoVO;
+import com.yuantu.labor.vo.PieChartVO;
 import org.springframework.security.access.prepost.PreAuthorize;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -101,4 +105,34 @@
     {
         return toAjax(employeeService.deleteEmployeeByEmpIds(empIds));
     }
+
+    /**
+     *
+     * @param empVO
+     * @return
+     */
+    @GetMapping("/typeAnalysis")
+    public AjaxResult typeAnalysis(EmployeeInfoVO empVO ){
+        AjaxResult ajax = AjaxResult.success();
+        if(empVO!=null && empVO.getEmpAgeInterval()!=null){
+            String[] ageArray = empVO.getEmpAgeInterval().split("-");
+            empVO.setMinAge(Integer.parseInt(ageArray[0]));
+            empVO.setMaxAge(Integer.parseInt(ageArray[1]));
+        }
+        //将 empVO作为查询条件，到mapper里查询
+        Map<String, Collection<PieChartVO>> empMap =  employeeService.selectEmployeeByEmployeeInfoVO(empVO);
+        //查询结果结果集，进行解析
+        Set<Map.Entry<String, Collection<PieChartVO>>> empSets =  empMap.entrySet();
+        //取出各个结果集，将结果集转成json格式，返回给客户端
+        Iterator<Map.Entry<String, Collection<PieChartVO>>> empIter = empSets.iterator();
+        while(empIter.hasNext()){
+            Map.Entry<String, Collection<PieChartVO>> entry = empIter.next();
+            Collection<PieChartVO> pieChartVOSet = entry.getValue();
+            String dataName = entry.getKey();
+            String jsonStr = JSON.toJSONString(pieChartVOSet);
+            System.out.println("json:"+jsonStr);
+            ajax.put(dataName,JSON.toJSONString(pieChartVOSet));
+        }
+        return ajax;
+    }
 }
