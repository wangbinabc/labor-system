<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuantu.labor.mapper.EmpCredentialsMapper">

    <resultMap type="EmpCredentials" id="EmpCredentialsResult">
        <result property="credId" column="cred_id"/>
        <result property="credName" column="cred_name"/>
        <result property="credEmpId" column="cred_emp_id"/>
        <result property="credEmpName" column="cred_emp_name"/>
        <result property="credEmpIdcard" column="cred_emp_idcard"/>
        <result property="credType" column="cred_type"/>
        <result property="credRegistTime" column="cred_regist_time"/>
        <result property="credObtainTime" column="cred_obtain_time"/>
        <result property="credPeriod" column="cred_period"/>
        <result property="credExpTime" column="cred_exp_time"/>
        <result property="credAualificationAnnex" column="cred_aualification_annex"/>
        <result property="credRegistAnnex" column="cred_regist_annex"
                typeHandler="com.yuantu.labor.handler.ListToVarcharTypeHandler"/>
        <result property="credUpdateTime" column="cred_update_time"/>
        <result property="remainingDays" column="remainingDays"/>
        <result property="disabled" column="disabled"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>


    <resultMap type="com.yuantu.labor.vo.CredentialsDetailsVO" id="CredentialsDetailsVO">
        <result property="credId" column="cred_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="credName" column="cred_name"/>
        <result property="credEmpId" column="cred_emp_id"/>
        <result property="credEmpName" column="cred_emp_name"/>
        <result property="credEmpIdcard" column="cred_emp_idcard"/>
        <result property="credType" column="cred_type"/>
        <result property="credRegistTime" column="cred_regist_time"/>
        <result property="credObtainTime" column="cred_obtain_time"/>
        <result property="credPeriod" column="cred_period"/>
        <result property="credExpTime" column="cred_exp_time"/>
        <result property="remainingDays" column="remainingDays"/>
        <result property="credAualificationAnnex" column="cred_aualification_annex"/>
        <result property="credRegistAnnex" column="cred_regist_annex"
                typeHandler="com.yuantu.labor.handler.ListToVarcharTypeHandler"/>
        <result property="disabled" column="disabled"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remainingDays" column="remaining_days"/>
    </resultMap>

    <sql id="selectEmpCredentialsVo">
        select t.*,department.dept_name as dept_name, INSERT(SP_DECRYPT(employee.emp_idcard),5,10,'**********')
        as
        cred_emp_idcard
        from (select cred_id,
                     cred_name,
                     cred_emp_id,
                     cred_emp_name,
              cred_type
              ,
              cred_regist_time
              ,
              cred_obtain_time
              ,
              cred_period
              ,
              cred_exp_time
              ,
              IF(DATEDIFF(cred_exp_time, NOW()) &lt; 0, 0, DATEDIFF(cred_exp_time, NOW()))
              AS
              remainingDays
              ,
              cred_aualification_annex
              ,
              cred_regist_annex
              ,
              cred_update_time
              ,
              disabled
              ,
              create_by
              ,
              create_time
              ,
              update_by
              ,
              update_time
              from emp_credentials) t
                 left join employee on t.cred_emp_id = employee.emp_id
                 left join department on employee.emp_dept_id = department.dept_id
    </sql>

    <select id="selectEmpCredentialsList" parameterType="EmpCredentials" resultMap="EmpCredentialsResult">
        <include refid="selectEmpCredentialsVo"/>
        <where>
            and t.disabled = 0
            <if test="credName != null  and credName != ''">and cred_name like concat('%', #{credName}, '%')</if>
            <if test="credEmpId != null ">and cred_emp_id = #{credEmpId}</if>
            <if test="credEmpName != null  and credEmpName != ''">and cred_emp_name like concat('%', #{credEmpName},
                '%')
            </if>
            <if test="credEmpIdcard != null  and credEmpIdcard != ''">and CAST(SP_DECRYPT(cred_emp_idcard) AS CHAR(128))
                = #{credEmpIdcard}
            </if>
            <if test="credType != null  and credType != ''">and cred_type = #{credType}</if>
            <if test="credRegistTime != null ">and cred_regist_time = #{credRegistTime}</if>
            <if test="credObtainTime != null ">and cred_obtain_time = #{credObtainTime}</if>
            <if test="credPeriod != null  and credPeriod != ''">and cred_period = #{credPeriod}</if>
            <if test="credExpTime != null ">and cred_exp_time = #{credExpTime}</if>
            <if test="credUpdateTime != null ">and cred_update_time = #{credUpdateTime}</if>
            <if test="isRelated !=null and isRelated == 1 ">and employee.disabled= 1</if>
        </where>
    </select>

    <select id="selectEmpCredentialsVOList" parameterType="EmpCredentials" resultMap="CredentialsDetailsVO">
        SELECT d.dept_name as dept_name, e.emp_dept_id as dept_id, ec.cred_id, ec.cred_name,
        ec.cred_emp_id, ec.cred_emp_name, INSERT(SP_DECRYPT(e.emp_idcard),5,10,'**********') as cred_emp_idcard,
        ec.cred_type, ec.cred_regist_time, ec.cred_obtain_time,
        ec.cred_period, ec.cred_exp_time,
        ec.cred_aualification_annex, ec.cred_regist_annex, ec.cred_update_time, ec.disabled, ec.create_by,
        ec.create_time, ec.update_by, ec.update_time,
        case when TIMESTAMPDIFF(day, now(), ec.cred_exp_time) = 0
        then TIMESTAMPDIFF(day, now(), ec.cred_exp_time)
        else TIMESTAMPDIFF(day, now(), ec.cred_exp_time) + 1
        end as remaining_days
        FROM
        emp_credentials AS ec
        left join employee  AS e on e.emp_id = ec.cred_emp_id
        left join department AS d on e.emp_dept_id = d.dept_id
        <where>
            and ec.disabled = 0
            <if test="credential.credEmpName != null  and credential.credEmpName != ''">and (e.emp_name like concat('%',
                #{credential.credEmpName}, '%') or
                CAST(SP_DECRYPT(e.emp_idcard) AS CHAR(128))
                like
                concat('%', #{credential.credEmpName}, '%'))
            </if>
            <if test="credential.deptName != null  and credential.deptName != ''">and e.emp_dept_name like concat('%',
                #{credential.deptName}, '%')
            </if>
            <if test="credential.deptId != null  and credential.deptId != ''">and e.emp_dept_id = #{credential.deptId}
            </if>
            <if test="credential.credName != null  and credential.credName != ''">and ec.cred_name like concat('%',
                #{credential.credName}, '%')
            </if>
            <if test="credential.credType != null  and credential.credType != ''">and ec.cred_type =
                #{credential.credType}
            </if>
            <if test="credential.credRegistTimeStart != null ">and ec.cred_regist_time &gt;=
                #{credential.credRegistTimeStart}
            </if>
            <if test="credential.credRegistTimeEnd != null ">and ec.cred_regist_time &lt;=
                #{credential.credRegistTimeEnd}
            </if>
            <if test="credential.credObtainTimeStart != null ">and ec.cred_obtain_time &gt;=
                #{credential.credObtainTimeStart}
            </if>
            <if test="credential.credObtainTimeEnd != null ">and ec.cred_obtain_time &lt;=
                #{credential.credObtainTimeEnd}
            </if>
            <if test="credential.credPeriod != null  and credential.credPeriod != ''">and ec.cred_period =
                #{credential.credPeriod}
            </if>
            <if test="credential.credExpTimeStart != null ">and ec.cred_exp_time &gt;= #{credential.credExpTimeStart}
            </if>
            <if test="credential.credExpTimeEnd != null ">and ec.cred_exp_time &lt;= #{credential.credExpTimeEnd}</if>
            <if test="credential.remainingDays != null">and
                case when TIMESTAMPDIFF(day, now(), ec.cred_exp_time) = 0
                then TIMESTAMPDIFF(day, now(), ec.cred_exp_time)
                else TIMESTAMPDIFF(day, now(), ec.cred_exp_time) + 1
                end
                = #{credential.remainingDays}
            </if>
            <if test="credential.reminder == 1">
                and DATEDIFF(cred_exp_time,NOW()) &lt;= #{credential.reminderTime} and DATEDIFF(cred_exp_time,NOW())>0
            </if>
            <if test="credential.isRelated == 1">
                and e.disabled = 1
            </if>
            <if test="credential.deptId != null">
                and e.emp_dept_id = #{credential.deptId}
            </if>
        </where>
    </select>


    <select id="selectEmpCredentialsByCredId" parameterType="Long" resultMap="EmpCredentialsResult">
        <include refid="selectEmpCredentialsVo"/>
        where cred_id = #{credId} and t.disabled = 0
    </select>


    <select id="countEmpCredentialsByDept" parameterType="com.yuantu.labor.vo.CredentialsCountParamsVO"
            resultType="com.yuantu.labor.vo.CredentialsCountVO">
        SELECT a.dept_id,a.dept_name,COUNT(1) countResult
        FROM
        (
        SELECT
        d.dept_id,d.dept_name, e.emp_name,INSERT(SP_DECRYPT(e.emp_idcard),5,10,'**********') as
        emp_idcard,ec.cred_name,ec.cred_type
        FROM
        emp_credentials AS ec ,
        department AS d ,
        employee AS e
        where e.emp_dept_id = d.dept_id and e.emp_id = ec.cred_emp_id and ec.disabled = 0 and e.disabled = 0
        <if test="nameOrIdcard != null  and nameOrIdcard != ''">and ec.cred_emp_name like concat('%', #{nameOrIdcard},
            '%')
        </if>
        <if test="nameOrIdcard != null  and nameOrIdcard != ''">or CAST(SP_DECRYPT(ec.cred_emp_idcard) AS CHAR(128))
            like concat('%', #{nameOrIdcard},
            '%')
        </if>
        <if test="deptId != null  and deptId != ''">and d.dept_id = #{deptId}</if>
        <if test="credType != null  and credType != ''">and ec.cred_type = #{credType}</if>
        <if test="credName != null  and credName != ''">and ec.cred_name = #{credName}</if>
        <if test="credRegistTimeStart != null  and credRegistTimeEnd != null ">
            and ec.cred_regist_time between #{credRegistTimeStart} and #{credRegistTimeEnd}
        </if>
        <if test="credObtainTimeStart != null   and credObtainTimeEnd != null ">
            and ec.cred_obtain_time between #{credObtainTimeStart} and #{credObtainTimeEnd}
        </if>
        <if test="credExpTimeStart != null   and credExpTimeEnd != null">
            and ec.cred_exp_time between #{credExpTimeStart} and #{credExpTimeEnd}
        </if>
        <if test="remainderStart != null  and remainderStart != ''">and ec.cred_exp_time &gt;= adddate(now(),interval
            +#{remainderStart} day)
        </if>
        <if test="remainderEnd != null  and remainderEnd != ''">and ec.cred_exp_time &lt;= adddate(now(),interval
            +#{remainderEnd} day)
        </if>
        <if test="reminder == 1">
            and DATEDIFF(cred_exp_time,NOW()) &lt;= #{reminderTime} and DATEDIFF(cred_exp_time,NOW())>0
        </if>
        ) AS a group by
        a.dept_id,a.dept_name
    </select>


    <select id="countEmpCredentialsByCredName" parameterType="com.yuantu.labor.vo.CredentialsCountParamsVO"
            resultType="com.yuantu.labor.vo.CredentialsCountVO">
        SELECT
        a.cred_type,COUNT(1) countResult
        FROM
        (
        SELECT
        d.dept_id,d.dept_name, e.emp_name,INSERT(SP_DECRYPT(e.emp_idcard),5,10,'**********') as
        emp_idcard,ec.cred_name,ec.cred_type
        FROM
        emp_credentials AS ec
        LEFT JOIN employee AS e  on e.emp_id = ec.cred_emp_id
        LEFT JOIN department AS d on e.emp_dept_id = d.dept_id
        where  ec.disabled = 0 and e.disabled = 0
        <if test="nameOrIdcard != null  and nameOrIdcard != ''">and ec.cred_emp_name like concat('%', #{nameOrIdcard},
            '%')
        </if>
        <if test="nameOrIdcard != null  and nameOrIdcard != ''">or CAST(SP_DECRYPT(ec.cred_emp_idcard) AS CHAR(128))
            like concat('%', #{nameOrIdcard},
            '%')
        </if>
        <if test="deptId != null  and deptId != ''">and d.dept_id = #{deptId}</if>
        <if test="credType != null  and credType != ''">and ec.cred_type = #{credType}</if>
        <if test="credName != null  and credName != ''">and ec.cred_name = #{credName}</if>
        <if test="credRegistTimeStart != null   and credRegistTimeEnd != null  ">
            and ec.cred_regist_time between #{credRegistTimeStart} and #{credRegistTimeEnd}
        </if>
        <if test="credObtainTimeStart != null   and credObtainTimeEnd != null  ">
            and ec.cred_obtain_time between #{credObtainTimeStart} and #{credObtainTimeEnd}
        </if>
        <if test="credExpTimeStart != null and credExpTimeEnd != null  ">
            and ec.cred_exp_time between #{credExpTimeStart} and #{credExpTimeEnd}
        </if>
        <if test="remainderStart != null  and remainderStart != ''">and ec.cred_exp_time &gt;= adddate(now(),interval
            +#{remainderStart} day)
        </if>
        <if test="remainderEnd != null  and remainderEnd != ''">and ec.cred_exp_time &lt;= adddate(now(),interval
            +#{remainderEnd} day)
        </if>
        <if test="reminder == 1">
            and DATEDIFF(cred_exp_time,NOW()) &lt;= #{reminderTime} and DATEDIFF(cred_exp_time,NOW())>0
        </if>
        ) AS a
        group by a.cred_type

    </select>

    <insert id="insertEmpCredentials" parameterType="EmpCredentials" useGeneratedKeys="true" keyProperty="credId">
        insert into emp_credentials
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="credName != null">cred_name,</if>
            <if test="credEmpId != null">cred_emp_id,</if>
            <if test="credEmpName != null">cred_emp_name,</if>
            <if test="credEmpIdcard != null">cred_emp_idcard,</if>
            <if test="credType != null">cred_type,</if>
            <if test="credRegistTime != null">cred_regist_time,</if>
            <if test="credObtainTime != null">cred_obtain_time,</if>
            <if test="credPeriod != null">cred_period,</if>
            <if test="credExpTime != null">cred_exp_time,</if>
            <if test="credAualificationAnnex != null">cred_aualification_annex,</if>
            <if test="credRegistAnnex != null">cred_regist_annex,</if>
            <if test="credUpdateTime != null">cred_update_time,</if>
            <if test="disabled != null">disabled,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="credName != null">#{credName},</if>
            <if test="credEmpId != null">#{credEmpId},</if>
            <if test="credEmpName != null">#{credEmpName},</if>
            <if test="credEmpIdcard != null">SP_ENCRYPT(#{credEmpIdcard}),</if>
            <if test="credType != null">#{credType},</if>
            <if test="credRegistTime != null">#{credRegistTime},</if>
            <if test="credObtainTime != null">#{credObtainTime},</if>
            <if test="credPeriod != null">#{credPeriod},</if>
            <if test="credExpTime != null">#{credExpTime},</if>
            <if test="credAualificationAnnex != null">#{credAualificationAnnex},</if>
            <if test="credRegistAnnex != null">
                #{credRegistAnnex,typeHandler=com.yuantu.labor.handler.ListToVarcharTypeHandler},
            </if>
            <if test="credUpdateTime != null">#{credUpdateTime},</if>
            <if test="disabled != null">#{disabled},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateEmpCredentials" parameterType="EmpCredentials">
        update emp_credentials
        <trim prefix="SET" suffixOverrides=",">
            <if test="credName != null">cred_name = #{credName},</if>
            <if test="credEmpId != null">cred_emp_id = #{credEmpId},</if>
            <if test="credEmpName != null">cred_emp_name = #{credEmpName},</if>
            <if test="credEmpIdcard != null">cred_emp_idcard = #{credEmpIdcard},</if>
            <if test="credType != null">cred_type = #{credType},</if>
            <if test="credRegistTime != null">cred_regist_time = #{credRegistTime},</if>
            <if test="credObtainTime != null">cred_obtain_time = #{credObtainTime},</if>
            <if test="credPeriod != null">cred_period = #{credPeriod},</if>
            <if test="credExpTime != null">cred_exp_time = #{credExpTime},</if>
            <if test="credAualificationAnnex != null">cred_aualification_annex = #{credAualificationAnnex},</if>
            <if test="credRegistAnnex != null">cred_regist_annex =
                #{credRegistAnnex,typeHandler=com.yuantu.labor.handler.ListToVarcharTypeHandler},
            </if>
            <if test="credUpdateTime != null">cred_update_time = #{credUpdateTime},</if>
            <if test="disabled != null">disabled = #{disabled},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where cred_id = #{credId}
    </update>

    <select id="findExportInfos" resultType="com.yuantu.labor.domain.EmpCredentials">
        <include refid="selectEmpCredentialsVo"/>
        where employee.disabled = 0 and t.disabled = 0
        <if test="export.ids != null and export.ids.size() > 0 ">
            and cred_id in
            <foreach collection="export.ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>
    <select id="findInfosByEmpIds" resultMap="CredentialsDetailsVO">
        SELECT e.emp_dept_name as dept_name,
        e.emp_dept_id as dept_id,
        ec.cred_id,
        ec.cred_name,
        ec.cred_emp_id,
        ec.cred_emp_name,
        INSERT(SP_DECRYPT(e.emp_idcard),5,10,'**********') as cred_emp_idcard,
        ec.cred_type,
        ec.cred_regist_time,
        ec.cred_obtain_time,
        ec.cred_period,
        ec.cred_exp_time,
        ec.cred_aualification_annex,
        ec.cred_regist_annex,
        ec.cred_update_time,
        ec.disabled,
        ec.create_by,
        ec.create_time,
        ec.update_by,
        ec.update_time,
        case
        when TIMESTAMPDIFF(day, now(), ec.cred_exp_time) = 0
        then TIMESTAMPDIFF(day, now(), ec.cred_exp_time)
        else TIMESTAMPDIFF(day, now(), ec.cred_exp_time) + 1
        end as remainingDays
        FROM emp_credentials ec
        left join employee e on ec.cred_emp_id = e.emp_id and e.disabled = 0
        where ec.disabled = 0 and ec.cred_emp_id in
        <foreach collection="empIds" item="empId" open="(" separator="," close=")">
            #{empId}
        </foreach>
    </select>


    <delete id="deleteEmpCredentialsByCredId" parameterType="Long">
        update emp_credentials
        set disabled = 1
        where cred_id = #{credId}
    </delete>

    <delete id="deleteEmpCredentialsByCredIds" parameterType="String">
        update emp_credentials set disabled = 1 where cred_id in
        <foreach item="credId" collection="array" open="(" separator="," close=")">
            #{credId}
        </foreach>
    </delete>
</mapper>